{
  "Copy2Clipboard": {
    "scope": "typescriptreact,javascript,javascriptreact,typescript",
    "prefix": "copy2clipboard",
    "body": [
      "const copyToClipboard = (text: string) => {",
      "  const el = document.createElement('textarea');",
      "  el.value = text;",
      "  document.body.appendChild(el);",
      "  el.select();",
      "  document.execCommand('copy');",
      "  document.body.removeChild(el);",
      "};"
    ]
  },
  "Download": {
    "scope": "typescript,javascript, typescriptreact,javascriptreact",
    "prefix": ["download", "handleDownload"],
    "body": [
      "function handleDownload(url:string) {",
      "  fetch(url, {",
      "    method: 'GET',",
      "  })",
      "    .then((response) => {",
      "      response.arrayBuffer().then(function (buffer) {",
      "        const url = window.URL.createObjectURL(new Blob([buffer]));",
      "        const link = document.createElement('a');",
      "        link.href = url;",
      "        link.setAttribute('download', 'pool-designer.png');",
      "        document.body.appendChild(link);",
      "        link.click();",
      "      });",
      "    })",
      "    .catch((err) => {",
      "      console.log(err);",
      "    });",
      "}"
    ]
  },
  "convertBase64ToImageURL": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "convertBase64ToImageURL",
    "body": [
      "function convertBase64ToImageURL(base64String: string): string {",
      "  const byteCharacters = atob(base64String);",
      "  const byteNumbers = new Array(byteCharacters.length);",
      "",
      "  for (let i = 0; i < byteCharacters.length; i++) {",
      "    byteNumbers[i] = byteCharacters.charCodeAt(i);",
      "  }",
      "",
      "  const byteArray = new Uint8Array(byteNumbers);",
      "  const blob = new Blob([byteArray], { type: 'image/png' });",
      "  const imageUrl = URL.createObjectURL(blob);",
      "",
      "  return imageUrl;",
      "}"
    ]
  },
  "convertImageToBase64": {
    "scope": "javascript,typescript,javascriptreact,typescriptreact",
    "prefix": "convertImageToBase64",
    "body": [
      "function convertImageToBase64(file: File): Promise<string> {",
      "  return new Promise((resolve, reject) => {",
      "    if (file.type.startsWith('image/')) {",
      "      const reader = new FileReader();",
      "",
      "      reader.onload = function () {",
      "        const base64String = reader.result?.toString().split(',')[1] || '';",
      "        resolve('data:image/png;base64,' + base64String);",
      "      };",
      "",
      "      reader.readAsDataURL(file);",
      "    } else {",
      "      reject(new Error('Selected file is not an image.'));",
      "    }",
      "  });",
      "}"
    ]
  }
}
